plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.unbroken-dome.test-sets' version '4.1.0'
	id 'com.diffplug.spotless' version '7.0.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

// Spotless code formatting configuration. Adds tasks spotlessCheck and spotlessApply.
spotless {
	java {
		googleJavaFormat('1.17.0') // Use Google Java Format
	}
}

bootRun {
	args = ["--spring.profiles.active=local"]
}

// this one line does multiple things:
//   • creates sourceSets.integrationTest (src/integration-test/java & resources)
//   • makes unit tests dependencies also visible for integration tests (they share the same dependencies)
//   • creates a Test task named 'integrationTest'
testSets {
	integrationTest
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.opencsv:opencsv:5.11'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.jsoup:jsoup:1.20.1'
	implementation 'io.projectreactor.addons:reactor-extra'

	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'net.javacrumbs.json-unit:json-unit-spring:4.1.0'
	testImplementation 'io.projectreactor:reactor-test:3.5.11'

}

tasks.named('test') {
	useJUnitPlatform()

	// always run tests, even if inputs/outputs appear unchanged
	outputs.upToDateWhen { false }
	shouldRunAfter(tasks.named('spotlessCheck'))

	testLogging {
		// show all tests ("standardOut" and "standardError" used to show prints and logs that happen during tests)
		events "passed", "skipped", "failed", "standardOut", "standardError"

		// print the actual exception message
		exceptionFormat "full"
	}
}

tasks.named('integrationTest') {
	useJUnitPlatform()

	outputs.upToDateWhen { false } // always run tests, even if inputs/outputs appear unchanged
	shouldRunAfter(tasks.named('test')) // ensure integration tests run after unit tests when both are invoked

	testLogging {
		// show all tests ("standardOut" and "standardError" used to show prints and logs that happen during tests)
		events "passed", "skipped", "failed", "standardOut", "standardError"

		// print the actual exception message
		exceptionFormat "full"
	}
}

tasks.named('check') {
	dependsOn 'spotlessCheck' // add format checking to check task
	dependsOn 'integrationTest' // add integrationTest task to check task (test task is by default a part of check task)
}
