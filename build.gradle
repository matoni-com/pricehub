plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

// ./gradlew bootRun will always run with the local profile unless overridden
bootRun {
	args = ["--spring.profiles.active=local"]
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'

	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// SQLite (for the initial phase)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.xerial:sqlite-jdbc:3.45.1.0' // SQLite driver
	implementation 'com.zaxxer:HikariCP' // Connection pooling
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.0.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()

	testLogging {
		// show all tests ("standardOut" and "standardError" used to show prints and logs that happen during tests)
		events "passed", "skipped", "failed", "standardOut", "standardError"

		// print the actual exception message
		exceptionFormat "full"
	}
}
